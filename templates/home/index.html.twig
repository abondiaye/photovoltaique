{# templates/home/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Accueil ‚Äî Photovoltaique{% endblock %}
{% block stylesheets %}
  {{ parent() }}
  <style>
    body {
      background: rgba(0,0,0,.45)
        url('{{ asset("Panneaux solaires sous la pluie.png") }}')
        center/cover no-repeat fixed;
      background-blend-mode: multiply;
    }
/* ====== Footer Styles ====== */
.site-footer {
  position: relative;
  width: 100%;
  padding: 20px 10px;
  background: rgba(0,0,0,0.4); /* transparent noir */
  backdrop-filter: blur(6px);
  color: #fff;
  text-align: center;
  font-size: 0.9rem;
  margin-top: 40px;
  border-top: 1px solid rgba(255,255,255,0.2);
}

.site-footer a {
  transition: color 0.3s ease, text-shadow 0.3s ease;
}
.site-footer a:hover {
  color: #ffd700;
  text-shadow: 0 0 6px #ffd700, 0 0 12px #ff8800, 0 0 18px #ff0080;
}
/* ====== Layout & overlay ====== */
.dash { position: relative; }
.calendar-animated-bg {
  position: absolute; inset: 0; overflow: hidden; z-index: 0;
}
.calendar-animated-bg, #calendarCanvas { pointer-events: none; }
.calendar-card { position: relative; z-index: 1; background: transparent; }

/* ====== Canvas ====== */
canvas {
  display: block;
}
#calendarCanvas { display:block; width:100%; height:100%; }
/* Assure que l‚Äôent√™te, le tableau et le formulaire passent AU-DESSUS du canvas */
.calendar-header,
#calendarTable,
#maintenanceForm {
  position: relative;
  z-index: 1;
}

.calendar-card {
  position: relative;
  border-radius: 20px;
  overflow: hidden;
}
.calendar-card::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 3px;
  border-radius: 20px;
  background: linear-gradient(120deg, #ffdd00, #ff0080, #00eaff, #ffdd00);
  background-size: 300% 300%;
  animation: borderFlow 6s linear infinite;
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}
@keyframes borderFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}
/* L‚Äôoverlay canvas reste en dessous */
.calendar-animated-bg { z-index: 0; }

/* ====== Calendar UI ====== */
#monthYear {
  color:#fff; font-weight:800; letter-spacing:.5px; margin:0;
}
.calendar-header {
  display:flex; align-items:center; gap:10px; margin:0 0 12px;
}
.calendar-nav {
  display:inline-flex; align-items:center; justify-content:center;
  width:36px; height:36px; border:1px solid rgba(255,255,255,.25);
  border-radius:10px; background:rgba(255,255,255,.06);
  color:#fff; cursor:pointer; user-select:none;
}
.calendar-nav:hover { background:rgba(255,255,255,.12); }

/* table */
#calendarTable {
  width:100%; border-collapse:collapse; table-layout:fixed; text-align:center;
}
#able th, #calendarTable td { color:#fff; }
#calendarTable th {
  padding:10px; font-weight:600; opacity:.95;
  border-bottom:2px solid rgba(255,255,255,.28);
}
#calendarTable td {
  padding:12px 8px;
  border:1px solid rgba(255,255,255,.22);  /* grille plus visible */
  cursor:pointer; transition:background .2s ease, transform .05s ease;
  vertical-align:middle;
}
/* hover seulement pour les jours actifs */
#calendarTable td:not(.is-past):hover { background:rgba(142,38,226,.35); }

/* aujourd‚Äôhui */
#calendarTable td.is-today {
  background:rgba(244,177,253,.9) !important;
  color:#222 !important; font-weight:800;
}

/* s√©lection */
#calendarTable td.selected {
  outline:2px solid #fff; outline-offset:-2px; transform:scale(0.98);
}

/* dates pass√©es (gris√© + non cliquable) */
#calendarTable td.is-past {
  color:rgba(255,255,255,.45);
  background:transparent !important;
  cursor:not-allowed;
}

/* petit plus: coins doux sur la carte */
.card.xl.glass.calendar-card { border-radius: 20px; overflow: hidden; }


/* ====== Formulaire ====== */
.merci {
  font-size: 2rem;
  font-weight: 800;
  background: linear-gradient(90deg, #ffdd00, #ff0080, #00eaff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  opacity: 0;
  animation: merciAnim 2s ease-in-out infinite, fadeIn 1s forwards;
  text-shadow: 0 0 10px rgba(255,255,255,0.7);
  
  
}

@keyframes merciAnim {
  0% { transform: scale(1); }
  50% { transform: scale(1.1) rotate(2deg); }
  100% { transform: scale(1); }
}
  </style>
{% endblock %}

{% block body %}

  {# ==== HERO (inchang√©, optionnel) ==== #}
  <section class="hero">
    <div>
      <h1 class="h-title">Net, rapide et puissant ‚Äî Panneau soign√© pour votre √©nergie </h1>
      <p class="h-sub">Estimations instantan√©es, devis transparents et un tableau de bord √©l√©gant pour suivre votre production solaire.</p>
      <title>Glowing Bouncing Ring</title>
      <link rel="stylesheet" href="style.css">
      </head>
      
      <canvas id="ringCanvas"></canvas>      </div>
    </div>
    <div class="glass" style="height:360px; border-radius:28px; display:flex; align-items:center; justify-content:center;">
      <div style="text-align:center;">
        <div style="font-size:92px; line-height:1">üîã</div>
        <div style="opacity:.8">Widget de production en temps r√©el</div>
      </div>
    </div>
  </section>
  <div class="cta" style="display:flex; gap:10px; flex-wrap:wrap">
  
    <!-- Bouton Avis Clients (version anim√©e) -->
    <a href="{{ path('avis') }}" style="text-decoration:none; margin-left:20px;">
      <button class="button" aria-label="Aller aux avis clients">
        <div class="bg"></div>
        <div class="wrap">
          <div class="content">
            <span class="char state-1">
              <span data-label="A" style="--i:1">A</span>
              <span data-label="V" style="--i:2">V</span>
              <span data-label="I" style="--i:3">I</span>
              <span data-label="S" style="--i:4">S</span>
              <span data-label=" " style="--i:5"> </span>
              <span data-label="C" style="--i:6"></span>
              <span data-label="L" style="--i:7"></span>
              <span data-label="I" style="--i:8"></span>
              <span data-label="E" style="--i:9"></span>
              <span data-label="N" style="--i:10"></span>
              <span data-label="T" style="--i:11"></span>
              <span data-label="" style="--i:12"></span>
            </span>
            <div class="icon"><div></div></div>
            <span class="char state-2">
              <span data-label="" style="--i:1">A</span>
              <span data-label="" style="--i:2">V</span>
              <span data-label="" style="--i:3">I</span>
              <span data-label="" style="--i:4">S</span>
              <span data-label="" style="--i:5"> </span>
              <span data-label="" style="--i:6">C</span>
              <span data-label="" style="--i:7">L</span>
              <span data-label="" style="--i:8">I</span>
              <span data-label="" style="--i:9">E</span>
              <span data-label="" style="--i:10">N</span>
              <span data-label="" style="--i:11">T</span>
              <span data-label="" style="--i:12">S</span>
            </span>
          </div>
        </div>
      </button>
    </a>
  </div>
  
  <a href="{{ path('avis') }}#form-avis" style="text-decoration:none">
    <button class="button avis-btn" aria-label="Donner mon avis">
      <div class="bg"></div>
      <div class="wrap">
        <div class="content">
          <span class="char state-1">
            <span data-label="D" style="--i:1">D</span>
            <span data-label="O" style="--i:2">O</span>
            <span data-label="N" style="--i:3">N</span>
            <span data-label="N" style="--i:4">N</span>
            <span data-label="E" style="--i:5">E</span>
            <span data-label="R" style="--i:6">R</span>
            <span data-label=" " style="--i:7"></span>
            <span data-label="A" style="--i:8">A</span>
            <span data-label="V" style="--i:9">V</span>
            <span data-label="I" style="--i:10">I</span>
            <span data-label="S" style="--i:11">S</span>
          </span>
        </div>
      </div>
    </button>
  </a>

  {# ==== CALENDRIER ==== #}
<section class="dash" style="display:flex; justify-content:center;">
    <div class="card xl glass calendar-card" style="grid-column:span 12; max-width:900px; margin:0 auto;">
      <!-- Canvas d'arri√®re-plan -->
      <div class="calendar-animated-bg">
        <canvas id="calendarCanvas" aria-hidden="true"></canvas>
      </div>

      <!-- Ent√™te avec navigation -->
      <div class="calendar-header">
        <button id="calPrev" type="button" class="calendar-nav" aria-label="Mois pr√©c√©dent">‚óÄ</button>
        <h3 id="monthYear" style="flex:1; text-align:center"></h3>
        <button id="calNext" type="button" class="calendar-nav" aria-label="Mois suivant">‚ñ∂</button>
      </div>

      <!-- Tableau -->
      <table id="calendarTable">
        <thead>
          <tr>
            <th>Lu</th><th>Ma</th><th>Me</th><th>Je</th><th>Ve</th><th>Sa</th><th>Di</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>

      {# Formulaire apr√®s clic #}
      <form id="maintenanceForm"
            method="post"
            action="{{ path('maintenance_new') }}"
            enctype="multipart/form-data"
            style="display:none; margin-top:12px;">
        <input type="hidden" name="date" id="mf_date">
        <label for="mf_time" style="opacity:.9">Heure souhait√©e</label>
        <input class="btn" type="time" id="mf_time" name="time" required>
        <small style="display:block; color:#888; margin-bottom:8px;">Choisissez l'heure de votre rendez-vous apr√®s avoir cliqu√© une date</small>
        <input class="btn" name="fullName" placeholder="Nom complet" required>
        <input class="btn" name="email" type="email" placeholder="Email" required>
        <input class="btn" name="phone" placeholder="T√©l√©phone">
        <input class="btn" name="addressLine1" placeholder="Adresse (num√©ro + rue)" required>
        <input class="btn" name="addressLine2" placeholder="Compl√©ment d‚Äôadresse (optionnel)">
        <input class="btn" name="city" placeholder="Ville" required>
        <input class="btn" name="postalCode" placeholder="Code postal" required>
        <select class="btn" name="type">
          <option value="cleaning">Nettoyage</option>
          <option value="inspection">Inspection</option>
          <option value="repair">D√©pannage</option>
        </select>
        <textarea class="btn" name="comment" placeholder="Commentaire (orientation, hauteur, acc√®s, particularit√©s‚Ä¶)" rows="3"></textarea>
        <label style="opacity:.9">Ajouter des photos (max 5 ‚Äî JPG/PNG/WebP, 10 Mo chacune)</label>
        <input class="btn" type="file" name="photos[]" accept="image/jpeg,image/png,image/webp" multiple>
        <button class="btn btn-primary">Demander cette date</button>
      </form>
    </div>
  
    <div style="display:flex; align-items:center; gap:10px;">
      <div id="robot-chat" class="robot-chat">
        {% include 'components/chatbox.html.twig' %}
      </div>
    </div>
    
    <script>

    
    // Helper function for typing animation
    function typeMessage(el, text, speed=30) {
      let i = 0;
      function typing() {
        if (i < text.length) {
          el.textContent += text.charAt(i);
          i++;
          setTimeout(typing, speed);
        }
      }
      typing();
    }
    </script>
    
    <div id="thankYouMessage" style="display:none; text-align:center; margin-top:20px;">
      <h2 class="merci">‚ú® Merci pour votre demande ‚ú®</h2>
      <p style="color:#fff; opacity:.85;">Nous vous contacterons rapidement pour confirmer le rendez-vous.</p>
    </div>
  </section>

  <footer class="site-footer">
    <div class="footer-content">
      <p>¬© {{ "now"|date("Y") }} Photovoltaique ‚Äî Tous droits r√©serv√©s</p>
      <p><a href="#" style="color:#ffd700; text-decoration:none;">Mentions l√©gales</a> | <a href="#" style="color:#ffd700; text-decoration:none;">Contact</a></p>
    </div>
  </footer>

  {# ==== JS ==== #}
  <script>
    
/* === 1) Calendrier navigable + dates pass√©es gris√©es === */
(function(){
  const monthNames = ["Janvier","F√©vrier","Mars","Avril","Mai","Juin","Juillet","Ao√ªt","Septembre","Octobre","Novembre","D√©cembre"];
  const monthYearEl = document.getElementById('monthYear');
  const tableBody   = document.querySelector('#calendarTable tbody');
  const btnPrev     = document.getElementById('calPrev');
  const btnNext     = document.getElementById('calNext');
  const form        = document.getElementById('maintenanceForm');
  const inputDate   = document.getElementById('mf_date');

  if (!monthYearEl || !tableBody) return;

  const today = new Date();
  const startOfToday = new Date(today.getFullYear(), today.getMonth(), today.getDate()); // 00:00 local
  let viewYear  = today.getFullYear();
  let viewMonth = today.getMonth(); // 0..11

  function renderCalendar(year, month){
    monthYearEl.textContent = `${monthNames[month]} ${year}`;
    tableBody.innerHTML = '';

    const firstOfMonth = new Date(year, month, 1);
    const jsFirst = firstOfMonth.getDay();        // 0..6 (0=dim)
    const firstDayIndex = (jsFirst + 6) % 7;      // Lundi=0
    const lastDate = new Date(year, month+1, 0).getDate();

    let d = 1;
    for (let i = 0; i < 6; i++) {
      const tr = document.createElement('tr');
      for (let j = 0; j < 7; j++) {
        const td = document.createElement('td');

        if (i === 0 && j < firstDayIndex) {
          td.textContent = '';
        } else if (d > lastDate) {
          td.textContent = '';
        } else {
          td.textContent = d;

          const cellDate = new Date(year, month, d);
          const isPast = cellDate < startOfToday;

          if (d === today.getDate() && month === today.getMonth() && year === today.getFullYear()) {
            td.classList.add('is-today');
          }

          if (isPast) {
            td.classList.add('is-past');
          } else {
            // on ne met la date cliquable que si ce n‚Äôest pas pass√©
            td.dataset.date = `${year}-${String(month+1).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
          }
          d++;
        }
        tr.appendChild(td);
      }
      tableBody.appendChild(tr);
      if (d > lastDate) break;
    }
  }

  btnPrev?.addEventListener('click', () => {
    viewMonth--;
    if (viewMonth < 0) { viewMonth = 11; viewYear--; }
    renderCalendar(viewYear, viewMonth);
  });
  btnNext?.addEventListener('click', () => {
    viewMonth++;
    if (viewMonth > 11) { viewMonth = 0; viewYear++; }
    renderCalendar(viewYear, viewMonth);
  });

  if (form && inputDate) {
    tableBody.addEventListener('click', (e) => {
      const td = e.target.closest('td');
      if (!td || !td.dataset.date) return; // ignore cellules vides / pass√©es

      tableBody.querySelectorAll('td.selected').forEach(el => el.classList.remove('selected'));
      td.classList.add('selected');

      inputDate.value = `${td.dataset.date}T12:00:00`;
      form.style.display = 'grid';
      form.style.gridTemplateColumns = '1fr 1fr';
      form.style.gap = '12px';
      form.scrollIntoView({ behavior: 'smooth', block: 'start' });
    });

    // Ajout de la gestion de l'envoi du formulaire
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      form.style.display = 'none';
      const thankYou = document.getElementById('thankYouMessage');
      if (thankYou) {
        thankYou.style.display = 'block';
        thankYou.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    });
  }

  renderCalendar(viewYear, viewMonth);
})();

/* === 2) Animation ‚Äúsoleil + montagnes‚Äù (plus lente + reduced-motion) === */
(function () {
  const bg       = document.querySelector('.calendar-animated-bg'); // pointer-events:none
  const canvas   = document.getElementById('calendarCanvas');
  const listenEl = document.querySelector('.calendar-card');        // on √©coute la souris ici
  if (!bg || !canvas || !listenEl) return;

  const c = canvas.getContext('2d');
  let w = 0, h = 0;

  const prefersReduced = window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;
  const SUN_SPEED = 0.01; // <= plus lent qu‚Äôavant (0.03)

  function resizeCanvasToWrapper() {
    const dpr = Math.max(1, window.devicePixelRatio || 1);
    const { width, height } = bg.getBoundingClientRect();
    w = Math.max(1, Math.floor(width));
    h = Math.max(1, Math.floor(height));
    canvas.width  = Math.floor(w * dpr);
    canvas.height = Math.floor(h * dpr);
    canvas.style.width  = w + 'px';
    canvas.style.height = h + 'px';
    c.setTransform(dpr, 0, 0, dpr, 0, 0);
  }

  const twoPI = Math.PI * 2;
  let mX = w/2, mY = h/2;
  let trackmouse = false;
  const per = { x: w/2, y: h/2, step: 1 };

  listenEl.addEventListener('mousemove', (e) => {
    trackmouse = true;
    const rect = listenEl.getBoundingClientRect();
    mX = e.clientX - rect.left;
    mY = e.clientY - rect.top;
    per.x = mX; per.y = mY;
    if (prefersReduced) drawFrame();
  });
  listenEl.addEventListener('mouseleave', () => { trackmouse = false; });

  const clamp = (n,min,max)=> Math.max(min, Math.min(max, n));
  function newGradient(gradient){
    let grad = gradient.type === "radial"
      ? c.createRadialGradient(gradient.x1, gradient.y1, gradient.r1, gradient.x1, gradient.y1, gradient.r2)
      : c.createLinearGradient(gradient.x1, gradient.y1, gradient.x2, gradient.y2);
    for (let i = 0; i < gradient.stops.length; i++) grad.addColorStop(gradient.stops[i].s, gradient.stops[i].c);
    return grad;
  }

  function Mountains(peaks){
    const RAY_LENGTH_FACTOR = 0.35;  // 0.35 = ~35% de la diagonale (raccourcit fortement)
    const RAY_OPACITY       = 0.015; // opacit√© des faisceaux (plus faible qu‚Äôavant)    

    const points = [];
    const init = () => {
      const step = w / peaks;
      let y = 0;
      points.length = 0;
      points.push({x: 0, y});
      for (let i = 1; i <= peaks; i++){
        y = y + (Math.random()*20) - 10;
        points.push({x: i * step, y});
      }
    };
    const draw = () => {
      c.save();
      const g = newGradient({ type: "linear", x1: 0, y1: 0, x2: 0, y2: h,
        stops: [{s:1, c:"rgba(0,0,0,1)"},{s:0, c:"rgba(80,80,80,1)"}] });
      c.fillStyle = g;
      c.beginPath();
      const mountainBase = h * 0.75; // place mountains at 75% of height
      c.moveTo(points[0].x, mountainBase - points[0].y);
      for (let p = 1; p < points.length; p++) {
        c.lineTo(points[p].x, mountainBase - points[p].y);
      }
      c.lineTo(w, h); c.lineTo(0, h); c.closePath(); c.fill();
      c.restore();

      const RAY_LENGTH_FACTOR = 0.35;  // 0.35 = ~35% de la diagonale (raccourcit fortement)
      const RAY_OPACITY       = 0.015; // opacit√© des faisceaux (plus faible qu‚Äôavant)
      
    };
    const resize = () => init();
    init();
    return { draw, resize };
  }

  const computePeaks = () => Math.max(120, Math.floor(w / 6));
  let mtn = Mountains(computePeaks());

  function drawFrame(){
    if (!trackmouse && !prefersReduced) {
      per.x = mX = w/2 + Math.cos(per.step) * w/2;
      per.y = mY = h/2 + Math.sin(per.step) * h/2;
      per.step += SUN_SPEED;
      if (per.step > twoPI) per.step = 0;
    }
    c.save();
    c.globalCompositeOperation = "source-over";
    const a = clamp(h - mY, 0, 255);
    const b = clamp(h - mY - 128, 0, 255);
    const grad = newGradient({
      type: "radial", x1: mX, y1: mY, r1: 0, r2: Math.max(w, h),
      stops: [{ s:0,   c:`rgba(${a},${a},${a},0.5)` },
              { s:0.05,c:`rgba(${a},${b},128,0.5)` },
              { s:1,   c:`rgba(0,${b},${a},0.5)` }]
    });
    c.fillStyle = grad; c.fillRect(0, 0, w, h); c.restore();
    mtn.draw();
  }

  function animate(){
    drawFrame();
    if (!prefersReduced) requestAnimationFrame(animate);
  }

  resizeCanvasToWrapper();
  let lastW = w;
  drawFrame();

  if ('ResizeObserver' in window) {
    const ro = new ResizeObserver(() => {
      resizeCanvasToWrapper();
      if (Math.abs(w - lastW) > 2) {
        lastW = w;
        mtn = Mountains(computePeaks());
        drawFrame();
      }
    });
    ro.observe(bg);
  } else {
    window.addEventListener('resize', () => {
      resizeCanvasToWrapper();
      if (Math.abs(w - lastW) > 2) {
        lastW = w;
        mtn = Mountains(computePeaks());
        drawFrame();
      }
    });
  }

  if (prefersReduced) {
    drawFrame(); // 1 frame, puis on ne tourne que sur interaction/resize
  } else {
    requestAnimationFrame(animate);
  }
})();

  </script>

{% endblock %}
